// <auto-generated />
using System;
using GrpcService.Data.SettingsDb;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace GrpcService.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20250128170914_CreatingTablesDB")]
    partial class CreatingTablesDB
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("GrpcService.Models.GameTransaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric")
                        .HasColumnName("amount");

                    b.Property<Guid>("ReseiverUserId")
                        .HasColumnType("uuid")
                        .HasColumnName("reseiver_id");

                    b.Property<Guid>("SenderUserId")
                        .HasColumnType("uuid")
                        .HasColumnName("sender_id");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("transactio_date");

                    b.HasKey("Id");

                    b.HasIndex("ReseiverUserId");

                    b.HasIndex("SenderUserId");

                    b.ToTable("GameTransactions", (string)null);
                });

            modelBuilder.Entity("GrpcService.Models.MatchHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<decimal>("BetAmount")
                        .HasColumnType("numeric")
                        .HasColumnName("bet_amount");

                    b.Property<Guid>("FirstUserId")
                        .HasColumnType("uuid")
                        .HasColumnName("first_user_id");

                    b.Property<DateTime>("MatchDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("match_date");

                    b.Property<Guid>("SecondUserId")
                        .HasColumnType("uuid")
                        .HasColumnName("second_user_id");

                    b.Property<string>("Status")
                        .HasColumnType("text")
                        .HasColumnName("status");

                    b.Property<Guid?>("WinnerId")
                        .HasColumnType("uuid")
                        .HasColumnName("winner_id");

                    b.HasKey("Id");

                    b.HasIndex("FirstUserId");

                    b.HasIndex("SecondUserId");

                    b.HasIndex("WinnerId");

                    b.ToTable("MatchHistory", (string)null);
                });

            modelBuilder.Entity("GrpcService.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<decimal>("Balance")
                        .HasColumnType("numeric")
                        .HasColumnName("balance");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_date");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("GrpcService.Models.GameTransaction", b =>
                {
                    b.HasOne("GrpcService.Models.User", null)
                        .WithMany()
                        .HasForeignKey("ReseiverUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_GameTransaction_ReseiverUser");

                    b.HasOne("GrpcService.Models.User", null)
                        .WithMany()
                        .HasForeignKey("SenderUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_GameTransaction_SenderUser");
                });

            modelBuilder.Entity("GrpcService.Models.MatchHistory", b =>
                {
                    b.HasOne("GrpcService.Models.User", null)
                        .WithMany()
                        .HasForeignKey("FirstUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_MatchHistory_FirstUserId");

                    b.HasOne("GrpcService.Models.User", null)
                        .WithMany()
                        .HasForeignKey("SecondUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_MatchHistory_SecondUserId");

                    b.HasOne("GrpcService.Models.User", null)
                        .WithMany()
                        .HasForeignKey("WinnerId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK_MatchHistory_WinnerId");
                });
#pragma warning restore 612, 618
        }
    }
}
